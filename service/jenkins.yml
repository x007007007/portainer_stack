version: '3.7'


services:
  jenkins:
    image: library/jenkins:tls
    environment:
      - JAVA_OPTS=-Djenkins.install.runSetupWizard=true -Dhudson.footerURL=http://${JENKINS_DOMAIN?Variable not set}
      - JENKINS_USER=${JENKINS_USER?JENKINS_USER}
      - JENKINS_PASS=${JENKINS_PASS?JENKINS_PASS}
    ports:
      - 8080:8080
      - 50000:50000
    volumes:
      - jenkins_data:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - jenkins_network
      - traefik-public
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
         condition: on-failure
      placement:
        constraints:
          - node.role == manager
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        - traefik.http.routers.jenkins-http.rule=Host(`${JENKINS_DOMAIN?Variable not set}`)
        - traefik.http.routers.jenkins-http.entrypoints=http
        - traefik.http.routers.jenkins-http.middlewares=https-redirect
        - traefik.http.routers.jenkins-http.service=jenkins
        - traefik.http.routers.jenkins-https.rule=Host(`${JENKINS_DOMAIN?Variable not set}`)
        - traefik.http.routers.jenkins-https.entrypoints=https
        - traefik.http.routers.jenkins-https.tls=true
        # Use the special Traefik service api@internal with the web UI/Dashboard
        - traefik.http.routers.portainer-https.service=jenkins
        - traefik.http.services.portainer.loadbalancer.server.port=8080
    healthcheck:
      test: ["CMD-SHELL", "curl -sS http://localhost:8080/login || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  jenkins_data:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "/jenkins_data"

networks:
  jenkins_network:
    driver: overlay
  traefik-public:
    external: true